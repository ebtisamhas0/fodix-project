<div class="row mt-3">
    <h5><%= information.data %></h5>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
        <div class="progress" style="margin-bottom: 10px; width: 90%;margin-left: 5%;">
            <div class="progress-bar" role="progressbar" style="width: 25%; background-color: cornflowerblue;opacity: 0.7;" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>
          </div> 
    <div id="player" class="youtube-video" ></div>

    <input id="YouTube-player-progress" type="range" value="0" min="0" max="100" onchange="youTubePlayerCurrentTimeChange(this.value);" oninput="youTubePlayerCurrentTimeSlide();" style="width: 80%;margin-left: 10%;">
   
    <!-- Edited-->
    <div  style="background-color: #5A0FC8; color: white; height: 4%;width: 15%;position: absolute; top: 45%;  right: 5%">
        <h6 style="margin: 2px;" >Click arrow to continue</h5>
    </div>

    <div style="position: absolute; top: 50%; width: 20%;height: 20%; right:-8%;">
        <i class="bi bi-arrow-right-circle" style="font-size: 1.7rem;"></i>
    </div>

    <div class="btn-div row mt-3 mx-auto">
    <button id="btn-previous">Previous</button>
    <button id="btn-next">Previous</button>
    </div>

    <script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
        height: 'auto',
        width: 'auto',
        videoId: '<%= information.data %>',
        playerVars: {
            'playsinline': 1,
            'rel': 0
        },
        events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
        }
        });
        player.personalPlayer = {'currentTimeSliding': false,
                                    'errors': []};
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        // if (event.data == YT.PlayerState.PLAYING && !done) {
        // setTimeout(stopVideo, 6000);
        // done = true;
        // }
    }
    function youTubePlayerActive() {
    'use strict';

    return player && player.hasOwnProperty('getPlayerState');
    }

    function youTubePlayerCurrentTimeChange(currentTime) {
    'use strict';

    player.personalPlayer.currentTimeSliding = false;
    if (youTubePlayerActive()) {
        player.seekTo(currentTime*player.getDuration()/100, true);
    }

    }

    function youTubePlayerCurrentTimeSlide() {
    'use strict';

    player.personalPlayer.currentTimeSliding = true;
    }

    function init() {
        setInterval(youTubePlayerDisplayInfos, 1000);
    }
    
    
    (function(){
    if (window.addEventListener) {
        window.addEventListener('load', init);
    } else if (window.attachEvent) {
        window.attachEvent('onload', init);
    }
    })

    function youTubePlayerDisplayInfos() {
    'use strict';
        if (youTubePlayerActive()) {
            let current = player.getCurrentTime();
            let duration = player.getDuration();
            let currentPercent = (current && duration
                              ? current*100/duration
                              : 0);
            if (!current) {
                current = 0;
            }
            if (!duration) {
                duration = 0;
            }
            if (!player.personalPlayer.currentTimeSliding) {
                document.getElementById('YouTube-player-progress').value = currentPercent;
            }                  
        }
    }
    
    </script>

</div>